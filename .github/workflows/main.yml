name: security-license-scan-action
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  Open-Source-license-scan:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Run clear
      run: |
        echo ${{ github.repository }}
        sudo rm -rf $PWD/reports
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: check out the repository
      uses: actions/checkout@v2
    - name: dep-scan
      uses: AppThreat/dep-scan-action@master
      env:
        VULNDB_HOME: ${{ github.workspace }}/db 
        GITHUB_TOKEN: ${{ secrets.GHE_TOKEN }}
    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: reports-depscan
        path: reports
      if: ${{ always() }}
  
  docker-build:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]
    needs: Open-Source-license-scan    
    steps:
    - name: Run clear
      run: |
        echo ${{ github.repository }}
        sudo rm -rf $PWD/reports
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: check out the repository
      uses: actions/checkout@v2
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag test:latest      
  docker-images-anchore-scan:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest ]
    needs: docker-build  
    steps:
    - name: Run clear
      run: |
        echo ${{ github.repository }}
        sudo rm -rf $PWD/reports     
    - name: scan the image with Anchore
      uses: anchore/scan-action@v2
      with:
        image: "test:latest"
        fail-build: true
        severity-cutoff: medium
        acs-report-enable: true
    - name: Inspect action SARIF report
      run: cat ${{ steps.scan.outputs.sarif }}   
